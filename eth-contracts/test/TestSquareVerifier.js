// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const verifier = artifacts.require('SquareVerifier')
const proof = require('../../zokrates/code/square/proof')

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

contract('TestSquareVerifier', accounts => {
    const account = accounts[0];

    describe('Square Verifier Testing', function () {
        beforeEach(async function () { 
            this.contract = await verifier.new({from: account});
        })

        // Test verification with correct proof
        it('Verifying correct proof', async function () { 
            const result_verify = await this.contract.verifyTx.call(
                proof.proof.a, 
                proof.proof.b, 
                proof.proof.c, 
                proof.inputs,
                {from: account }
            )

            assert.equal(result_verify, true, 'Proof should verify');
        
        })

        // Test verification with incorrect proof
        it('Verifying incorrect proof', async function () { 
            // Just changed the proof C to A and doesnt verify anymore.
            const result_verify = await this.contract.verifyTx.call(
                proof.proof.a, 
                proof.proof.b, 
                proof.proof.a, 
                proof.inputs,
                {from: account }
            )

            assert.equal(result_verify, false, 'Proof should not verify');
        
        })
    });
})

